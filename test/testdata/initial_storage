record
  branches = map
    ("tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV":address) -> record
      total_deposited = 2n;
      deposited_ranges = map
        2n -> record
          start_ = 0n;
          end_ = 2n;
        end;
      end;
      checkpoints = map
        ("fe8d90f7c18f4ca33a92fe2ce1d93326314ccfecaebdb88c7a49b21e5cb80f21": bytes) -> record
          subrange = record
            start_ = 0n;
            end_ = 1n;
          end;
          state_update = record
            predicate_address = ("tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV": address);
            inputs = map
              0n -> ("050a00000016000053c1edca8bd5c21c61d6f1fd091fa51d562aff1d": bytes);
              1n -> ("05070700000001": bytes);
              2n -> ("050000": bytes);
              3n -> ("0507070a00000016000053c1edca8bd5c21c61d6f1fd091fa51d562aff1d02000000210a0000001c050a00000016000053c1edca8bd5c21c61d6f1fd091fa51d562aff1d": bytes);
            end;
          end;
        end;
      end;
    end;
  end;
  commitment_storage = record
    current_block = 0n;
    commitments = map
      0n -> "root";
    end;
    operator_address = ("tz1TGu6TN5GSez2ndXXeDX6LgUDvLzPLqgYV": address);
  end;
  adjudication_storage = record
    instantiated_games = (map end : map(bytes, challenge_game));
  end;
  events_storage = record
    ts = now;
    events = map
      "BlockSubmitted" -> list(record[
        block_height = 0n;
        data = SubmittedEvent((0n, "root"));
      ]);
      end;
    end;
  end;
end
